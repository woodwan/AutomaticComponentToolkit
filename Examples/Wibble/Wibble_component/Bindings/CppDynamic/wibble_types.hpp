/*++

Copyright (C) 2019 Autodesk

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.6.0-RC1.

Abstract: This is an autogenerated C++-Header file with basic types in
order to allow an easy use of Wibble

Interface version: 0.0.1

*/

#ifndef __WIBBLE_TYPES_HEADER_CPP
#define __WIBBLE_TYPES_HEADER_CPP


/*************************************************************************************************************************
 Scalar types definition
**************************************************************************************************************************/

#ifdef WIBBLE_USELEGACYINTEGERTYPES

typedef unsigned char Wibble_uint8;
typedef unsigned short Wibble_uint16 ;
typedef unsigned int Wibble_uint32;
typedef unsigned long long Wibble_uint64;
typedef char Wibble_int8;
typedef short Wibble_int16;
typedef int Wibble_int32;
typedef long long Wibble_int64;

#else // WIBBLE_USELEGACYINTEGERTYPES

#include <stdint.h>

typedef uint8_t Wibble_uint8;
typedef uint16_t Wibble_uint16;
typedef uint32_t Wibble_uint32;
typedef uint64_t Wibble_uint64;
typedef int8_t Wibble_int8;
typedef int16_t Wibble_int16;
typedef int32_t Wibble_int32;
typedef int64_t Wibble_int64 ;

#endif // WIBBLE_USELEGACYINTEGERTYPES

typedef float Wibble_single;
typedef double Wibble_double;

/*************************************************************************************************************************
 General type definitions
**************************************************************************************************************************/

typedef Wibble_int32 WibbleResult;
typedef void * WibbleHandle;
typedef void * Wibble_pvoid;

/*************************************************************************************************************************
 Version for Wibble
**************************************************************************************************************************/

#define WIBBLE_VERSION_MAJOR 0
#define WIBBLE_VERSION_MINOR 0
#define WIBBLE_VERSION_MICRO 1
#define WIBBLE_VERSION_PRERELEASEINFO ""
#define WIBBLE_VERSION_BUILDINFO ""

/*************************************************************************************************************************
 Error constants for Wibble
**************************************************************************************************************************/

#define WIBBLE_SUCCESS 0
#define WIBBLE_ERROR_NOTIMPLEMENTED 1
#define WIBBLE_ERROR_INVALIDPARAM 2
#define WIBBLE_ERROR_INVALIDCAST 3
#define WIBBLE_ERROR_BUFFERTOOSMALL 4
#define WIBBLE_ERROR_GENERICEXCEPTION 5
#define WIBBLE_ERROR_COULDNOTLOADLIBRARY 6
#define WIBBLE_ERROR_COULDNOTFINDLIBRARYEXPORT 7
#define WIBBLE_ERROR_INCOMPATIBLEBINARYVERSION 8

/*************************************************************************************************************************
 Declaration of handle classes 
**************************************************************************************************************************/

typedef WibbleHandle Wibble_Wibble;
typedef WibbleHandle Wibble_Wobble;
typedef WibbleHandle Wibble_Base;

namespace Wibble {

  /*************************************************************************************************************************
   Declaration of interfaces
  **************************************************************************************************************************/
  
  #pragma pack (1)
  
  /* Predeclare all interfaces */
  
  typedef struct sWibble;
  typedef struct sWibble_VTable;
  typedef struct sWobble;
  typedef struct sWobble_VTable;
  
  /* Define interfaces */
  
  /* Wibble Handle struct */
  typedef struct {
    Wibble_Wibble m_handle;
    sWibble_VTable* m_vtable;
  } sWibble;
  
  /* Wibble function signatures */
  
  /**
  * 
  *
  * @param[in] pWibble - Wibble instance.
  * @param[out] p - 
  * @return error code or 0 (success)
  */
  typedef WibbleResult (*PWibbleWibble_GetWobblePtr) (Wibble_Wibble pWibble, Wibble::sWobble * p);
  
  /* Wibble VTable struct */
  typedef struct {
    PWibbleWibble_GetWobblePtr m_GetWobble;
  } sWibble_VTable;
  
  /* Wobble Handle struct */
  typedef struct {
    Wibble_Wobble m_handle;
    sWobble_VTable* m_vtable;
  } sWobble;
  
  /* Wobble function signatures */
  
  /* Wobble VTable struct */
  typedef struct {
  } sWobble_VTable;
  
  #pragma pack ()
  
} // namespace Wibble;

// define legacy C-names for enums, structs and function types

#endif // __WIBBLE_TYPES_HEADER_CPP
